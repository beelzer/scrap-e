name: "Run Tests"
description: "Execute test suite with pytest"
inputs:
  test-args:
    description: "Additional arguments to pass to pytest"
    required: false
    default: ""
  upload-coverage:
    description: "Whether to upload coverage reports"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Run tests with pytest
      run: |
        echo "Running test suite..."
        # Remove coverage flags if they're in the default pytest.ini to avoid duplication
        uv run pytest tests/ \
          --tb=short \
          --verbose \
          --color=yes \
          --cov-report=term \
          --cov-report=xml \
          --cov-report=html \
          --junitxml=test-results.xml \
          -m "not benchmark and not performance" \
          ${{ inputs.test-args }}
      shell: bash

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results.xml
        retention-days: 7

    - name: Upload coverage reports
      if: inputs.upload-coverage == 'true' && always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
        retention-days: 7

    - name: Display coverage summary
      if: always()
      run: |
        echo "Coverage Summary:"
        if [ -f coverage.xml ]; then
          echo "Coverage report generated - see coverage.xml for details"
          # Try to extract coverage percentage with grep as fallback
          grep -o 'line-rate="[0-9.]*"' coverage.xml | head -1 | sed 's/line-rate="/Coverage: /' | sed 's/"/%/' || echo "Coverage data available in coverage.xml"
        fi
      shell: bash
