name: 🔒 CodeQL Security Analysis

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  schedule:
    - cron: '30 1 * * 0'  # Sunday at 1:30 AM UTC

jobs:
  analyze:
    name: 🔍 Analyze Code
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['python']

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5

      - name: 🔧 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  trivy:
    name: 🛡️ Trivy Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      security-events: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔍 Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          ignore-unfixed: true

      - name: 📤 Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        continue-on-error: true
        with:
          sarif_file: 'trivy-results.sarif'

      - name: 🔍 Run Trivy in table format
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          ignore-unfixed: false

  snyk:
    name: 🔐 Snyk Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      contents: read
      security-events: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 🔍 Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --sarif-file-output=snyk.sarif

      - name: 📤 Upload Snyk results
        if: always() && env.SNYK_TOKEN != ''
        uses: github/codeql-action/upload-sarif@v3
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          sarif_file: snyk.sarif

  gitleaks:
    name: 🔑 Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🔍 Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ossf-scorecard:
    name: 📊 OSSF Scorecard
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      security-events: write
      id-token: write
      contents: read
      actions: read
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: 📊 Run OSSF Scorecard
        uses: ossf/scorecard-action@v2.4.0
        with:
          results_file: scorecard.sarif
          results_format: sarif
          publish_results: true

      - name: 📤 Upload OSSF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scorecard.sarif
